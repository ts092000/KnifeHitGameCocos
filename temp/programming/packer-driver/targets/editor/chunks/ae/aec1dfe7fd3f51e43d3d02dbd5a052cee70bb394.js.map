{"version":3,"sources":["file:///C:/Users/ADMIN/ThrowKnifeGame/assets/Scripts/Game.ts"],"names":["_decorator","Component","Node","tween","Vec3","instantiate","ccclass","property","Game","type","onLoad","canThrow","zIndexKnife","spriteKnife","getPosition","z","zIndexWood","spriteWood","spriteWoodRotation","arrayKnife","defaultSpriteKnife","position","node","on","EventType","TOUCH_START","knifeThrow","onDestroy","off","start","update","deltaTime","angle","knife","rad","Math","PI","r","y","setPosition","x","cos","sin","spriteKnifeMove","to","call","knifeNode","addChild","push","active"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, tween, Vec3, instantiate } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Game')\r\nexport class Game extends Component {\r\n    @property({type:Node})\r\n        spriteWood: Node\r\n\r\n    @property({type:Node})\r\n        spriteKnife: Node\r\n\r\n    static canThrow: boolean = false;\r\n    static spriteWoodRotation: number = null;\r\n    static defaultSpriteKnife = null;\r\n    static arrayKnife: Node[] = [];\r\n\r\n    onLoad() {\r\n        Game.canThrow = true;\r\n        let zIndexKnife = this.spriteKnife.getPosition().z;\r\n        let zIndexWood = this.spriteWood.getPosition().z;\r\n        zIndexKnife = 0;\r\n        zIndexWood = 1;\r\n        Game.spriteWoodRotation = 1.5;\r\n        Game.arrayKnife = [];\r\n        Game.defaultSpriteKnife = this.spriteKnife.position;\r\n\r\n        this.node.on(Node.EventType.TOUCH_START, this.knifeThrow, this);\r\n    }\r\n\r\n    onDestroy() {\r\n        this.node.off(Node.EventType.TOUCH_START, this.knifeThrow, this);\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        this.spriteWood.angle = (this.spriteWood.angle + Game.spriteWoodRotation) % 360;\r\n\r\n        for (let knife of Game.arrayKnife) {\r\n            knife.angle = (knife.angle + Game.spriteWoodRotation) % 360;\r\n\r\n            let rad = Math.PI * (knife.angle - 90) / 180;\r\n            let r = this.spriteWood.position.y / 2;\r\n\r\n            knife.setPosition(new Vec3(this.spriteWood.position.x + r * Math.cos(rad), this.spriteWood.position.y + r * Math.sin(rad), this.spriteWood.position.z + 1000));\r\n        }\r\n    }\r\n\r\n    knifeThrow() {\r\n        if (Game.canThrow) {\r\n            Game.canThrow = false;\r\n            let spriteKnifeMove = tween(this.spriteKnife)\r\n                .to(0.25, {position: new Vec3(this.spriteWood.position.x, this.spriteWood.position.y / 2, this.spriteWood.position.z)})\r\n                .call(() => {\r\n                    let knifeNode = instantiate(this.spriteKnife);\r\n                    knifeNode.setPosition(this.spriteKnife.position);\r\n                    this.node.addChild(knifeNode);\r\n                    Game.arrayKnife.push(knifeNode);\r\n\r\n                    this.spriteKnife.setPosition(Game.defaultSpriteKnife);\r\n                    this.spriteKnife.active = true;\r\n                    Game.canThrow = true;\r\n                });\r\n            spriteKnifeMove.start();\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}