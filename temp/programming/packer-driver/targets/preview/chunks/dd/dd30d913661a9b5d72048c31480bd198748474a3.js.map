{"version":3,"sources":["file:///C:/Users/ADMIN/ThrowKnifeGame/assets/Scripts/Game.ts"],"names":["_decorator","Component","Node","tween","Vec3","ccclass","property","Game","type","onLoad","canThrow","spriteWoodRotation","arrayKnife","defaultSpriteKnife","spriteKnife","position","node","on","EventType","TOUCH_START","knifeThrow","onDestroy","off","start","update","deltaTime","spriteWood","angle","to","x","y","z","call"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;;;;;;;;;OACvC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;sBAGjBO,I,WADZF,OAAO,CAAC,MAAD,C,UAEHC,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAACN;AAAN,OAAD,C,UAGRI,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAACN;AAAN,OAAD,C,sCALb,MACaK,IADb,SAC0BN,SAD1B,CACoC;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAYhCQ,QAAAA,MAAM,GAAG;AACLF,UAAAA,IAAI,CAACG,QAAL,GAAgB,IAAhB;AACAH,UAAAA,IAAI,CAACI,kBAAL,GAA0B,GAA1B;AACAJ,UAAAA,IAAI,CAACK,UAAL,GAAkB,EAAlB;AACAL,UAAAA,IAAI,CAACM,kBAAL,GAA0B,KAAKC,WAAL,CAAiBC,QAA3C;AAEA,eAAKC,IAAL,CAAUC,EAAV,CAAaf,IAAI,CAACgB,SAAL,CAAeC,WAA5B,EAAyC,KAAKC,UAA9C,EAA0D,IAA1D;AACH;;AAEDC,QAAAA,SAAS,GAAG;AACR,eAAKL,IAAL,CAAUM,GAAV,CAAcpB,IAAI,CAACgB,SAAL,CAAeC,WAA7B,EAA0C,KAAKC,UAA/C,EAA2D,IAA3D;AACH;;AAEDG,QAAAA,KAAK,GAAG,CAEP;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB;AACtB,eAAKC,UAAL,CAAgBC,KAAhB,GAAwB,CAAC,KAAKD,UAAL,CAAgBC,KAAhB,GAAwBpB,IAAI,CAACI,kBAA9B,IAAoD,GAA5E;AACH;;AAEDS,QAAAA,UAAU,GAAG;AACT,cAAIb,IAAI,CAACG,QAAT,EAAmB;AACfH,YAAAA,IAAI,CAACG,QAAL,GAAgB,KAAhB;AACAP,YAAAA,KAAK,CAAC,KAAKW,WAAN,CAAL,CACKc,EADL,CACQ,GADR,EACa;AAACb,cAAAA,QAAQ,EAAE,IAAIX,IAAJ,CAAS,KAAKsB,UAAL,CAAgBX,QAAhB,CAAyBc,CAAlC,EAAqC,KAAKH,UAAL,CAAgBX,QAAhB,CAAyBe,CAAzB,GAA6B,CAAlE,EAAqE,KAAKJ,UAAL,CAAgBX,QAAhB,CAAyBgB,CAA9F;AAAX,aADb,EAEKC,IAFL,CAEU,MAAM,CAEX,CAJL,EAIOT,KAJP;AAKH;AACJ;;AA1C+B,O,UAOzBb,Q,GAAoB,K,UACpBC,kB,GAA6B,I,UAC7BE,kB,GAAqB,I,UACrBD,U,GAAqB,E","sourcesContent":["import { _decorator, Component, Node, tween, Vec3 } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Game')\r\nexport class Game extends Component {\r\n    @property({type:Node})\r\n        spriteWood: Node\r\n\r\n    @property({type:Node})\r\n        spriteKnife: Node\r\n\r\n    static canThrow: boolean = false;\r\n    static spriteWoodRotation: number = null;\r\n    static defaultSpriteKnife = null;\r\n    static arrayKnife: Node[] = [];\r\n\r\n    onLoad() {\r\n        Game.canThrow = true;\r\n        Game.spriteWoodRotation = 2.5;\r\n        Game.arrayKnife = [];\r\n        Game.defaultSpriteKnife = this.spriteKnife.position;\r\n\r\n        this.node.on(Node.EventType.TOUCH_START, this.knifeThrow, this);\r\n    }\r\n\r\n    onDestroy() {\r\n        this.node.off(Node.EventType.TOUCH_START, this.knifeThrow, this);\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        this.spriteWood.angle = (this.spriteWood.angle + Game.spriteWoodRotation) % 180;\r\n    }\r\n\r\n    knifeThrow() {\r\n        if (Game.canThrow) {\r\n            Game.canThrow = false;\r\n            tween(this.spriteKnife)\r\n                .to(0.5, {position: new Vec3(this.spriteWood.position.x, this.spriteWood.position.y / 2, this.spriteWood.position.z)})\r\n                .call(() => {\r\n\r\n                }).start()\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}