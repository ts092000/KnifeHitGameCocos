{"version":3,"sources":["file:///C:/Users/ADMIN/KnifeHitGameCocos/assets/Scripts/Game.ts"],"names":["_decorator","Component","Node","tween","Vec3","instantiate","director","Label","ccclass","property","Game","type","onLoad","canThrow","spriteWoodRotation","arrayKnife","defaultSpriteKnife","spriteKnife","position","console","log","node","on","EventType","TOUCH_START","knifeThrow","setInterval","changeSpeedWood","onDestroy","off","start","scoreLabel","string","score","update","deltaTime","spriteWood","angle","knife","rad","Math","PI","knifeX","x","knifeY","cos","y","sin","setPosition","spriteKnifeMove","to","removeSelf","call","gap","isHit","abs","z","easing","loadScene","knifeNode","addChild","push","updateScore","active","direction","random","speed"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,K,OAAAA,K;;;;;;;;;OACpE;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;sBAGjBU,I,WADZF,OAAO,CAAC,MAAD,C,UAEHC,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAACT;AAAN,OAAD,C,UAGRO,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAACT;AAAN,OAAD,C,UAGRO,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAACJ;AAAN,OAAD,C,sCARb,MACaG,IADb,SAC0BT,SAD1B,CACoC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAgBhCW,QAAAA,MAAM,GAAG;AACLF,UAAAA,IAAI,CAACG,QAAL,GAAgB,IAAhB;AACAH,UAAAA,IAAI,CAACI,kBAAL,GAA0B,GAA1B;AACAJ,UAAAA,IAAI,CAACK,UAAL,GAAkB,EAAlB;AACAL,UAAAA,IAAI,CAACM,kBAAL,GAA0B,KAAKC,WAAL,CAAiBC,QAA3C;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYV,IAAI,CAACM,kBAAjB;AAEA,eAAKK,IAAL,CAAUC,EAAV,CAAapB,IAAI,CAACqB,SAAL,CAAeC,WAA5B,EAAyC,KAAKC,UAA9C,EAA0D,IAA1D;AAEAC,UAAAA,WAAW,CAAC,MAAM;AACd,iBAAKC,eAAL;AACH,WAFU,EAER,IAFQ,CAAX;AAGH;;AAEDC,QAAAA,SAAS,GAAG;AACR,eAAKP,IAAL,CAAUQ,GAAV,CAAc3B,IAAI,CAACqB,SAAL,CAAeC,WAA7B,EAA0C,KAAKC,UAA/C,EAA2D,IAA3D;AACH;;AAEDK,QAAAA,KAAK,GAAG;AACJ,eAAKC,UAAL,CAAgBC,MAAhB,GAAyB,YAAYtB,IAAI,CAACuB,KAA1C;AACH;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB;AACtB,eAAKC,UAAL,CAAgBC,KAAhB,GAAwB,CAAC,KAAKD,UAAL,CAAgBC,KAAhB,GAAwB3B,IAAI,CAACI,kBAA9B,IAAoD,GAA5E;;AAEA,eAAK,IAAIwB,KAAT,IAAkB5B,IAAI,CAACK,UAAvB,EAAmC;AAC/BuB,YAAAA,KAAK,CAACD,KAAN,GAAc,CAACC,KAAK,CAACD,KAAN,GAAc3B,IAAI,CAACI,kBAApB,IAA0C,GAAxD;AAEA,gBAAIyB,GAAG,GAAGC,IAAI,CAACC,EAAL,IAAWH,KAAK,CAACD,KAAN,GAAc,EAAzB,IAA+B,GAAzC;AAEA,gBAAIK,MAAM,GAAGJ,KAAK,CAACpB,QAAN,CAAeyB,CAA5B;AACA,gBAAIC,MAAM,GAAGN,KAAK,CAACpB,QAAN,CAAeyB,CAA5B;AAEAD,YAAAA,MAAM,GAAG,KAAKN,UAAL,CAAgBlB,QAAhB,CAAyByB,CAAzB,GAA6B,MAAMH,IAAI,CAACK,GAAL,CAASN,GAAT,CAA5C;AACAK,YAAAA,MAAM,GAAG,KAAKR,UAAL,CAAgBlB,QAAhB,CAAyB4B,CAAzB,GAA6B,MAAMN,IAAI,CAACO,GAAL,CAASR,GAAT,CAA5C;AAEAD,YAAAA,KAAK,CAACU,WAAN,CAAkB,IAAI5C,IAAJ,CAASsC,MAAT,EAAiBE,MAAjB,EAAyB,CAAzB,CAAlB;AACH,WAfqB,CAgBtB;;AACH;;AAEDnB,QAAAA,UAAU,GAAG;AACT,cAAIf,IAAI,CAACG,QAAT,EAAmB;AACfH,YAAAA,IAAI,CAACG,QAAL,GAAgB,KAAhB;AACA,iBAAKI,WAAL,CAAiB+B,WAAjB,CAA6BtC,IAAI,CAACM,kBAAlC;AACA,gBAAIiC,eAAe,GAAG9C,KAAK,CAAC,KAAKc,WAAN,CAAL,CACjBiC,EADiB,CACd,IADc,EACR;AAAChC,cAAAA,QAAQ,EAAE,IAAId,IAAJ,CAAS,KAAKgC,UAAL,CAAgBlB,QAAhB,CAAyByB,CAAlC,EAAqC,KAAKP,UAAL,CAAgBlB,QAAhB,CAAyB4B,CAAzB,GAA6B,GAAlE,EAAuE,CAAvE;AAAX,aADQ,EAEjBK,UAFiB,GAGjBC,IAHiB,CAGZ,MAAM;AACR,kBAAIC,GAAG,GAAG,EAAV;AACA,kBAAIC,KAAK,GAAG,KAAZ;;AAEA,mBAAK,IAAIhB,KAAT,IAAkB5B,IAAI,CAACK,UAAvB,EAAmC;AAC/B,oBAAIyB,IAAI,CAACe,GAAL,CAASjB,KAAK,CAACD,KAAf,IAAwBgB,GAAxB,IAAgC,MAAMf,KAAK,CAACD,KAAb,GAAsBgB,GAAzD,EAA8D;AAC1DC,kBAAAA,KAAK,GAAG,IAAR;AACA5C,kBAAAA,IAAI,CAACuB,KAAL,GAAa,CAAb;AACA,uBAAKF,UAAL,CAAgBC,MAAhB,GAAyB,YAAYtB,IAAI,CAACuB,KAA1C;AACA;AACH;AACJ;;AAED,kBAAIqB,KAAJ,EAAW;AACPnD,gBAAAA,KAAK,CAAC,KAAKc,WAAN,CAAL,CACKiC,EADL,CACQ,IADR,EACc;AAAChC,kBAAAA,QAAQ,EAAE,IAAId,IAAJ,CAAS,KAAKa,WAAL,CAAiBC,QAAjB,CAA0ByB,CAAnC,EAAsC,CAAC,GAAvC,EAA4C,KAAK1B,WAAL,CAAiBC,QAAjB,CAA0BsC,CAAtE;AAAX,iBADd,EACqG;AAAEC,kBAAAA,MAAM,EAAE;AAAV,iBADrG,EAEKL,IAFL,CAEU,MAAM;AACRjC,kBAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAd,kBAAAA,QAAQ,CAACoD,SAAT,CAAmB,MAAnB;AACH,iBALL,EAKO5B,KALP;AAMH,eAPD,MAQK;AACD,oBAAI6B,SAAS,GAAGtD,WAAW,CAAC,KAAKY,WAAN,CAA3B;AACA0C,gBAAAA,SAAS,CAACX,WAAV,CAAsB,KAAK/B,WAAL,CAAiBC,QAAvC;AACA,qBAAKG,IAAL,CAAUuC,QAAV,CAAmBD,SAAnB;AACAjD,gBAAAA,IAAI,CAACK,UAAL,CAAgB8C,IAAhB,CAAqBF,SAArB;AACA,qBAAKG,WAAL,GALC,CAMD;;AACA3C,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,WAAL,CAAiBC,QAA7B;AACA,qBAAKD,WAAL,CAAiB8C,MAAjB,GAA0B,IAA1B;AACA,qBAAK9C,WAAL,CAAiB+B,WAAjB,CAA6BtC,IAAI,CAACM,kBAAlC;AACAG,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,WAAL,CAAiBC,QAA7B;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAYV,IAAI,CAACM,kBAAjB,EAXC,CAaD;;AACAN,gBAAAA,IAAI,CAACG,QAAL,GAAgB,IAAhB;AACH;AACJ,aAxCiB,CAAtB;AAyCAoC,YAAAA,eAAe,CAACnB,KAAhB;AACH;AACJ;;AAEDH,QAAAA,eAAe,GAAG;AACd,cAAIqC,SAAS,GAAGxB,IAAI,CAACyB,MAAL,KAAgB,GAAhB,GAAsB,GAAtB,GAA4B,CAAC,GAA7C;AACA,cAAIC,KAAK,GAAG,IAAI1B,IAAI,CAACyB,MAAL,KAAgB,GAAhC;AACAvD,UAAAA,IAAI,CAACI,kBAAL,GAA0BkD,SAAS,GAAGE,KAAtC;AACH;;AAEDJ,QAAAA,WAAW,GAAG;AACVpD,UAAAA,IAAI,CAACuB,KAAL,IAAc,CAAd;AACA,eAAKF,UAAL,CAAgBC,MAAhB,GAAyB,YAAYtB,IAAI,CAACuB,KAA1C;AACH;;AAnH+B,O,UAUzBpB,Q,GAAoB,K,UACpBC,kB,GAA6B,I,UAC7BE,kB,GAAqB,I,UACrBD,U,GAAqB,E,UACrBkB,K,GAAgB,C","sourcesContent":["import { _decorator, Component, Node, tween, Vec3, instantiate, director, Label, quat } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Game')\r\nexport class Game extends Component {\r\n    @property({type:Node})\r\n        spriteWood: Node\r\n\r\n    @property({type:Node})\r\n        spriteKnife: Node\r\n\r\n    @property({type:Label})\r\n        scoreLabel: Label\r\n\r\n    static canThrow: boolean = false;\r\n    static spriteWoodRotation: number = null;\r\n    static defaultSpriteKnife = null;\r\n    static arrayKnife: Node[] = [];\r\n    static score: number = 0;\r\n\r\n    onLoad() {\r\n        Game.canThrow = true;\r\n        Game.spriteWoodRotation = 1.5;\r\n        Game.arrayKnife = [];\r\n        Game.defaultSpriteKnife = this.spriteKnife.position;\r\n        console.log(Game.defaultSpriteKnife);\r\n\r\n        this.node.on(Node.EventType.TOUCH_START, this.knifeThrow, this);\r\n\r\n        setInterval(() => {\r\n            this.changeSpeedWood();\r\n        }, 3000)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.node.off(Node.EventType.TOUCH_START, this.knifeThrow, this);\r\n    }\r\n\r\n    start() {\r\n        this.scoreLabel.string = \"Score: \" + Game.score;\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        this.spriteWood.angle = (this.spriteWood.angle + Game.spriteWoodRotation) % 360;\r\n\r\n        for (let knife of Game.arrayKnife) {\r\n            knife.angle = (knife.angle + Game.spriteWoodRotation) % 360;\r\n\r\n            let rad = Math.PI * (knife.angle - 90) / 180;\r\n\r\n            let knifeX = knife.position.x;\r\n            let knifeY = knife.position.x;\r\n\r\n            knifeX = this.spriteWood.position.x + 239 * Math.cos(rad);\r\n            knifeY = this.spriteWood.position.y + 239 * Math.sin(rad);\r\n\r\n            knife.setPosition(new Vec3(knifeX, knifeY, 0));\r\n        }\r\n        // this.spriteKnife.setPosition(Game.defaultSpriteKnife);\r\n    }\r\n\r\n    knifeThrow() {\r\n        if (Game.canThrow) {\r\n            Game.canThrow = false;\r\n            this.spriteKnife.setPosition(Game.defaultSpriteKnife);\r\n            let spriteKnifeMove = tween(this.spriteKnife)\r\n                .to(0.25, {position: new Vec3(this.spriteWood.position.x, this.spriteWood.position.y - 239, 0)})\r\n                .removeSelf()\r\n                .call(() => {\r\n                    let gap = 15;\r\n                    let isHit = false;\r\n\r\n                    for (let knife of Game.arrayKnife) {\r\n                        if (Math.abs(knife.angle) < gap || (360 - knife.angle) < gap) {\r\n                            isHit = true;\r\n                            Game.score = 0;\r\n                            this.scoreLabel.string = \"Score: \" + Game.score;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (isHit) {\r\n                        tween(this.spriteKnife)\r\n                            .to(0.25, {position: new Vec3(this.spriteKnife.position.x, -900, this.spriteKnife.position.z)} , { easing: 'bounceInOut' })\r\n                            .call(() => {\r\n                                console.log('GameOver');\r\n                                director.loadScene('Game');\r\n                            }).start()\r\n                    }\r\n                    else {\r\n                        let knifeNode = instantiate(this.spriteKnife);\r\n                        knifeNode.setPosition(this.spriteKnife.position);\r\n                        this.node.addChild(knifeNode);\r\n                        Game.arrayKnife.push(knifeNode);\r\n                        this.updateScore();\r\n                        // this.spriteKnife.setPosition(Game.defaultSpriteKnife);\r\n                        console.log(this.spriteKnife.position);\r\n                        this.spriteKnife.active = true;\r\n                        this.spriteKnife.setPosition(Game.defaultSpriteKnife);\r\n                        console.log(this.spriteKnife.position);\r\n                        console.log(Game.defaultSpriteKnife);\r\n                        \r\n                        // console.log(this.spriteKnife.position);\r\n                        Game.canThrow = true;\r\n                    }\r\n                });\r\n            spriteKnifeMove.start();\r\n        }\r\n    }\r\n\r\n    changeSpeedWood() {\r\n        let direction = Math.random() > 0.5 ? 1.5 : -1.5;\r\n        let speed = 1 + Math.random() * 1.5;\r\n        Game.spriteWoodRotation = direction * speed;\r\n    }\r\n\r\n    updateScore() {\r\n        Game.score += 1;\r\n        this.scoreLabel.string = \"Score: \" + Game.score;\r\n    }\r\n}\r\n\r\n\r\n"]}